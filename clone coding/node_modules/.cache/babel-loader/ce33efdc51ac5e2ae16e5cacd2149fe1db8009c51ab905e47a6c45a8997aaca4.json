{"ast":null,"code":"var _jsxFileName = \"/Users/parkbyeongchan/Documents/KAIST/2023/SUMMER/\\u1106\\u1169\\u11AF\\u110B\\u1175\\u11B8\\u110F\\u1162\\u11B7\\u1111\\u1173/3\\u110C\\u116E\\u110E\\u1161/clone coding/src/components/organisms/Slider/index.tsx\";\nimport React from 'react';\nimport Slider from 'react-slick';\nimport * as S from './style';\nimport { setSlick } from 'utils/settings/setSlick';\nimport { Card } from 'components';\nimport { RECENTLYROOMTEXT, RECENTLYCOMPLEXTEXT } from 'utils copy/contents/string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Slick({\n  data,\n  boxWidth,\n  cardGroup,\n  cardImgHeight,\n  slidesToScroll = 4,\n  slidesToShow = 4\n}) {\n  if (slidesToScroll || slidesToShow) {\n    setSlick.slidesToScroll = slidesToScroll;\n    setSlick.slidesToShow = slidesToShow;\n  }\n  return /*#__PURE__*/_jsxDEV(S.GridItem, {\n    boxWidth: boxWidth,\n    children: data && /*#__PURE__*/_jsxDEV(Slider, {\n      ...setSlick,\n      children: [data.map((CardData, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          ...CardData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 32\n        }, this);\n      }), cardGroup === 'room' && /*#__PURE__*/_jsxDEV(Card, {\n        CardType: \"type05\",\n        to: \"/\",\n        noneTitle: RECENTLYROOMTEXT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 46\n      }, this), cardGroup === 'complex' && /*#__PURE__*/_jsxDEV(Card, {\n        CardType: \"type05\",\n        to: \"/\",\n        noneTitle: RECENTLYCOMPLEXTEXT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = Slick;\nvar _c;\n$RefreshReg$(_c, \"Slick\");","map":{"version":3,"names":["React","Slider","S","setSlick","Card","RECENTLYROOMTEXT","RECENTLYCOMPLEXTEXT","jsxDEV","_jsxDEV","Slick","data","boxWidth","cardGroup","cardImgHeight","slidesToScroll","slidesToShow","GridItem","children","map","CardData","index","fileName","_jsxFileName","lineNumber","columnNumber","CardType","to","noneTitle","_c","$RefreshReg$"],"sources":["/Users/parkbyeongchan/Documents/KAIST/2023/SUMMER/몰입캠프/3주차/clone coding/src/components/organisms/Slider/index.tsx"],"sourcesContent":["import React from 'react';\nimport Slider from 'react-slick';\nimport * as S from './style';\nimport { setSlick } from 'utils/settings/setSlick';\nimport { Card } from 'components';\nimport { CardProps } from '../../molecules/Card';\n\nimport { RECENTLYROOMTEXT, RECENTLYCOMPLEXTEXT } from 'utils copy/contents/string';\n\nexport interface SlickProps {\n    data?: CardProps[]; // 카드 데이터\n    boxWidth?: string; // 카드 크기\n    cardImgHeight?: string; // 카드 이미지 크기\n    cardGroup?: string; // 방/단지 구분\n    slidesToScroll?: number; // 슬라이드 보여줄 수\n    slidesToShow?: number; // 슬라이드 넘길 수\n}\n\nexport function Slick({ data, boxWidth, cardGroup, cardImgHeight, slidesToScroll = 4, slidesToShow = 4 }: SlickProps): React.ReactElement {\n    if (slidesToScroll || slidesToShow) {\n        setSlick.slidesToScroll = slidesToScroll;\n        setSlick.slidesToShow = slidesToShow;\n    }\n\n    return (\n        <S.GridItem boxWidth={boxWidth}>\n            {data && (\n                <Slider {...setSlick}>\n                    {data.map((CardData: CardProps, index: number) => {\n                        return <Card {...CardData} />;\n                    })}\n                    {cardGroup === 'room' && <Card CardType=\"type05\" to=\"/\" noneTitle={RECENTLYROOMTEXT} />}\n                    {cardGroup === 'complex' && <Card CardType=\"type05\" to=\"/\" noneTitle={RECENTLYCOMPLEXTEXT} />}\n                </Slider>\n            )}\n        </S.GridItem>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,KAAKC,CAAC,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,IAAI,QAAQ,YAAY;AAGjC,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWnF,OAAO,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,aAAa;EAAEC,cAAc,GAAG,CAAC;EAAEC,YAAY,GAAG;AAAc,CAAC,EAAsB;EACtI,IAAID,cAAc,IAAIC,YAAY,EAAE;IAChCZ,QAAQ,CAACW,cAAc,GAAGA,cAAc;IACxCX,QAAQ,CAACY,YAAY,GAAGA,YAAY;EACxC;EAEA,oBACIP,OAAA,CAACN,CAAC,CAACc,QAAQ;IAACL,QAAQ,EAAEA,QAAS;IAAAM,QAAA,EAC1BP,IAAI,iBACDF,OAAA,CAACP,MAAM;MAAA,GAAKE,QAAQ;MAAAc,QAAA,GACfP,IAAI,CAACQ,GAAG,CAAC,CAACC,QAAmB,EAAEC,KAAa,KAAK;QAC9C,oBAAOZ,OAAA,CAACJ,IAAI;UAAA,GAAKe;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MACjC,CAAC,CAAC,EACDZ,SAAS,KAAK,MAAM,iBAAIJ,OAAA,CAACJ,IAAI;QAACqB,QAAQ,EAAC,QAAQ;QAACC,EAAE,EAAC,GAAG;QAACC,SAAS,EAAEtB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtFZ,SAAS,KAAK,SAAS,iBAAIJ,OAAA,CAACJ,IAAI;QAACqB,QAAQ,EAAC,QAAQ;QAACC,EAAE,EAAC,GAAG;QAACC,SAAS,EAAErB;MAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB;AAACI,EAAA,GAnBenB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}