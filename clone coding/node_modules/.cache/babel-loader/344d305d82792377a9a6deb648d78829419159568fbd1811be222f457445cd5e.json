{"ast":null,"code":"var _jsxFileName = \"/Users/parkbyeongchan/Documents/KAIST/2023/SUMMER/\\u1106\\u1169\\u11AF\\u110B\\u1175\\u11B8\\u110F\\u1162\\u11B7\\u1111\\u1173/3\\u110C\\u116E\\u110E\\u1161/mad_mansion/src/components/molecules/FormInput/index.stories.tsx\",\n  _defaultBtn$parameter,\n  _defaultBtn$parameter2,\n  _defaultBtn$parameter3,\n  _linktBtn$parameters,\n  _linktBtn$parameters2,\n  _linktBtn$parameters3;\n// index.stories.tsx\n\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Btn, LinkBtn } from '../../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Atoms/Btn',\n  argTypes: {\n    btnType: {\n      control: {\n        type: 'select',\n        options: ['default', 'blue', 'blue_outline', 'border_none']\n      }\n    }\n  }\n};\nexport const defaultBtn = args => /*#__PURE__*/_jsxDEV(Btn, {\n  ...args,\n  btnOnClick: action('Button is clicked!')\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 47\n}, this);\ndefaultBtn.args = {\n  children: '테스트',\n  disabled: false\n};\nexport const linktBtn = args => /*#__PURE__*/_jsxDEV(LinkBtn, {\n  ...args,\n  btnOnClick: action('Button is clicked!')\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 49\n}, this);\nlinktBtn.args = {\n  children: '테스트',\n  disabled: false,\n  btnLink: ''\n};\ndefaultBtn.parameters = {\n  ...defaultBtn.parameters,\n  docs: {\n    ...((_defaultBtn$parameter = defaultBtn.parameters) === null || _defaultBtn$parameter === void 0 ? void 0 : _defaultBtn$parameter.docs),\n    source: {\n      originalSource: \"(args: BtnProps) => <Btn {...args} btnOnClick={action('Button is clicked!')} />\",\n      ...((_defaultBtn$parameter2 = defaultBtn.parameters) === null || _defaultBtn$parameter2 === void 0 ? void 0 : (_defaultBtn$parameter3 = _defaultBtn$parameter2.docs) === null || _defaultBtn$parameter3 === void 0 ? void 0 : _defaultBtn$parameter3.source)\n    }\n  }\n};\nlinktBtn.parameters = {\n  ...linktBtn.parameters,\n  docs: {\n    ...((_linktBtn$parameters = linktBtn.parameters) === null || _linktBtn$parameters === void 0 ? void 0 : _linktBtn$parameters.docs),\n    source: {\n      originalSource: \"(args: LinkBtnProps) => <LinkBtn {...args} btnOnClick={action('Button is clicked!')} />\",\n      ...((_linktBtn$parameters2 = linktBtn.parameters) === null || _linktBtn$parameters2 === void 0 ? void 0 : (_linktBtn$parameters3 = _linktBtn$parameters2.docs) === null || _linktBtn$parameters3 === void 0 ? void 0 : _linktBtn$parameters3.source)\n    }\n  }\n};\nexport const __namedExportsOrder = [\"defaultBtn\", \"linktBtn\"];","map":{"version":3,"names":[],"sources":[],"sourcesContent":["// index.stories.tsx\n\nimport React from 'react';\nimport { Meta } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { Btn, LinkBtn, BtnProps, LinkBtnProps } from '../../index';\nexport default ({\n  title: 'Atoms/Btn',\n  argTypes: {\n    btnType: {\n      control: {\n        type: 'select',\n        options: ['default', 'blue', 'blue_outline', 'border_none']\n      }\n    }\n  }\n} as Meta);\nexport const defaultBtn = (args: BtnProps) => <Btn {...args} btnOnClick={action('Button is clicked!')} />;\ndefaultBtn.args = {\n  children: '테스트',\n  disabled: false\n};\nexport const linktBtn = (args: LinkBtnProps) => <LinkBtn {...args} btnOnClick={action('Button is clicked!')} />;\nlinktBtn.args = {\n  children: '테스트',\n  disabled: false,\n  btnLink: ''\n};\ndefaultBtn.parameters = {\n  ...defaultBtn.parameters,\n  docs: {\n    ...defaultBtn.parameters?.docs,\n    source: {\n      originalSource: \"(args: BtnProps) => <Btn {...args} btnOnClick={action('Button is clicked!')} />\",\n      ...defaultBtn.parameters?.docs?.source\n    }\n  }\n};\nlinktBtn.parameters = {\n  ...linktBtn.parameters,\n  docs: {\n    ...linktBtn.parameters?.docs,\n    source: {\n      originalSource: \"(args: LinkBtnProps) => <LinkBtn {...args} btnOnClick={action('Button is clicked!')} />\",\n      ...linktBtn.parameters?.docs?.source\n    }\n  }\n};"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}