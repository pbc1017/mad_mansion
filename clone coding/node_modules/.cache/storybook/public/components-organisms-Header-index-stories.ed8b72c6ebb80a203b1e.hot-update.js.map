{"version":3,"file":"components-organisms-Header-index-stories.ed8b72c6ebb80a203b1e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA1EA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://mad_mansion/./src/components/organisms/Header/index.tsx","webpack://mad_mansion/./src/components/organisms/Header/style.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport logo from 'assets/images/logo.png';\nimport mene_all from 'assets/images/btn_mene_all.png';\nimport mene_all_close from 'assets/images/btn_mene_all_close.png';\nimport * as S from './style';\nimport { Btn, Img } from 'components';\n\nexport function Header(): React.ReactElement {\n    const [isSideNav, setIsSideNav] = useState<boolean>(false);\n\n    const handleSide = (): void => {\n        setIsSideNav(!isSideNav);\n    };\n\n    return (\n        <S.Container>\n            <div className=\"pc clearfix\">\n                <div className=\"fl_l\">\n                    <S.HeaderWrapper fl_l>\n                        <Btn btnType=\"border_none\">\n                            <Img src={logo} alt=\"로고\" />\n                        </Btn>\n                    </S.HeaderWrapper>\n                    <S.HeaderWrapper fl_l>\n                        <ul>\n                            <li>프로중개사 사이트</li>\n                            <li>다방허브 사이트</li>\n                        </ul>\n                    </S.HeaderWrapper>\n                </div>\n                <S.NavBox>\n                    <S.HeaderWrapper fl_r>\n                        <ul>\n                            <li>방찾기</li>\n                            <li>분양</li>\n                            <li>관심목록</li>\n                            <li>방내놓기</li>\n                            <li>알림</li>\n                        </ul>\n                    </S.HeaderWrapper>\n                    <S.HeaderWrapper fl_r>\n                        <ul>\n                            <li>회원가입 · 로그인</li>\n                        </ul>\n                    </S.HeaderWrapper>\n                </S.NavBox>\n            </div>\n            <div className=\"mobile clearfix\">\n                <div className=\"fl_l\">\n                    <Btn btnType=\"border_none\">\n                        <Img src={logo} alt=\"로고\" />\n                    </Btn>\n                </div>\n                <div className=\"fl_r\">\n                    <Btn btnType=\"border_none\" btnOnClick={handleSide}>\n                        <Img src={mene_all} alt=\"햄버거 메뉴\" />\n                    </Btn>\n                </div>\n            </div>\n\n            <S.SideNavBox isSideNav={isSideNav}>\n                <S.UserTop>\n                    <S.AuthBtn btnType=\"default\">회원가입 · 로그인</S.AuthBtn>\n                </S.UserTop>\n                <S.MNavBox>\n                    <ul>\n                        <li>방찾기</li>\n                        <li>분양</li>\n                        <li>관심목록</li>\n                        <li>방내놓기</li>\n                        <li>알림</li>\n                    </ul>\n                </S.MNavBox>\n                <S.SideNavClose>\n                    <Btn btnType=\"border_none\" btnOnClick={handleSide}>\n                        <Img src={mene_all_close} alt=\"닫기\" />\n                    </Btn>\n                </S.SideNavClose>\n            </S.SideNavBox>\n        </S.Container>\n    );\n}\n","import styled, { css } from 'styled-components';\nimport { Btn } from 'components';\n\ninterface Props {\n    fl_l?: boolean;\n    fl_r?: boolean;\n    isSideNav?: boolean;\n}\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 70px;\n    padding: 0 16px;\n    border-bottom: 1px solid #ebebeb;\n    line-height: 70px;\n`;\n\nexport const HeaderWrapper = styled.div<Props>`\n    display: inline-block;\n\n    li {\n        display: inline-block;\n\n        & + li {\n            margin: 0 0 0 20px;\n        }\n    }\n\n    ${(props) =>\n        props.fl_l &&\n        css`\n            & + div {\n                margin: 0 0 0 22px;\n            }\n        `}\n\n    ${(props) =>\n        props.fl_r &&\n        css`\n            & + div {\n                margin: 0 0 0 9.1%;\n            }\n        `}\n`;\n\nexport const NavBox = styled.nav`\n    float: right;\n    width: calc(100% - 400px);\n    text-align: right;\n`;\n\nexport const SideNavBox = styled.div<Props>`\n    position: fixed;\n    top: 0;\n    right: -100%; /* default -100% */\n    z-index: 30;\n    width: 100%;\n    height: 100%;\n    background: #fff;\n    transition: right 0.25s ease-in;\n\n    ${(props) =>\n        props.isSideNav &&\n        css`\n            right: 0;\n        `}\n`;\n\nexport const UserTop = styled.div`\n    padding: 60px 18px 20px;\n    background: #1c0883;\n`;\n\nexport const AuthBtn = styled(Btn)`\n    width: 100%;\n    height: 44px;\n    border: 1px solid #3983fe;\n`;\n\nexport const MNavBox = styled.nav`\n    padding: 0 16px;\n\n    li {\n        display: block;\n        width: 100%;\n        padding: 7px 0;\n\n        & + li {\n            border-top: 1px solid #e3e3e3;\n        }\n    }\n`;\n\nexport const SideNavClose = styled.div`\n    position: absolute;\n    top: 10px;\n    right: 17px;\n    width: 24px;\n    height: 25px;\n    line-height: 0;\n`;\n"],"names":[],"sourceRoot":""}