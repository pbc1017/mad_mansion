{"version":3,"file":"components-molecules-Card-index-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AAAA;AAAA;AAujHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://mad_mansion/./src/assets/images/tab.svg","webpack://mad_mansion/./src/components/molecules/Card/index.tsx","webpack://mad_mansion/./src/components/molecules/Card/style.ts"],"sourcesContent":["var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTab({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#444\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.017 15.994L16.017 11.021 17.017 11.021 17.017 16.994 1.017 16.994 1.017 0.997 7.004 0.997 7.004 1.997 2.017 1.997 2.017 15.994z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.015 10.715L7.308 10.008 15.793 1.522 16.5 2.229z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.029 2.012L11.029 2.012 11.029 1.012 17.029 1.012 17.029 7.012 16.029 7.012z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTab);\nexport default __webpack_public_path__ + \"static/media/tab.4dc2fab6d6d1c615861e9c612a9ece9e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\n\nimport * as S from './style';\nimport { Img, EventDate } from 'components';\nimport TabIcon from 'assets/images/tab.svg';\n\nexport interface CardProps {\n    CardType?: string; // 카트 유형 선택\n    to?: string; // 이동 페이지\n    imgSrc?: string; // 이미지 주소\n    alt?: string; // 이미지 설명\n    title?: string | number; // 제목\n    noneTitle?: string; // 제목\n    address?: string; // 상품 주소\n    description1?: string; // 상세설명1\n    description2?: string; // 상세설명2\n    chkDate?: Date; // 확인 날짜\n    FlagValid?: boolean; // 태그광고 on/off\n    Flag?: string; // 태그내용\n    room?: string; // 건물유형\n    roomInfo?: string; // 건물 추가 정보\n    ableRoom?: number; // 거래가능한 방 개수\n    complexData?: boolean; // 단지정보 on/off\n    boxWidth?: string; // 박스 크기\n    cardImgHeight?: string; // 이미지 크기\n}\n\nexport function Card({\n    CardType,\n    noneTitle,\n    to,\n    imgSrc,\n    alt,\n    title,\n    address,\n    description1,\n    description2,\n    FlagValid,\n    Flag,\n    chkDate,\n    room,\n    roomInfo,\n    complexData,\n    ableRoom,\n    boxWidth,\n    cardImgHeight,\n    ...props\n}: CardProps) {\n    return (\n        <S.CardWrapper CardType={CardType} boxWidth={boxWidth} {...props}>\n            {to ? (\n                <S.LinkWrapper to=\"\">\n                    {imgSrc && alt && (\n                        <S.ImgWrapper cardImgHeight={cardImgHeight}>\n                            <Img src={imgSrc} alt={alt} />\n                        </S.ImgWrapper>\n                    )}\n\n                    {(FlagValid || Flag) && (\n                        <S.FlagWrapper>\n                            {FlagValid && <S.Flag FlagValid>플러스+</S.Flag>}\n                            {Flag && (\n                                <S.Flag>\n                                    {Flag}\n                                    {chkDate && <EventDate eventDateType=\"type01\" dateAt={chkDate} />}\n                                </S.Flag>\n                            )}\n                        </S.FlagWrapper>\n                    )}\n\n                    {(room || roomInfo) && (\n                        <>\n                            {room && <S.RoomInfoWrapper styleroom>{room}</S.RoomInfoWrapper>}\n                            {roomInfo && (\n                                <S.RoomInfoWrapper>\n                                    <S.AndWrapper>·</S.AndWrapper>\n                                    {roomInfo}\n                                </S.RoomInfoWrapper>\n                            )}\n                        </>\n                    )}\n\n                    {title && (\n                        <S.TitleWrapper CardType={CardType}>\n                            {address && <S.AddressWrapper>{address}</S.AddressWrapper>}\n                            {title}\n                        </S.TitleWrapper>\n                    )}\n\n                    {(description1 || description2) && (\n                        <S.SubWrapper CardType={CardType}>\n                            {description1 && <S.DetailWrapper>{description1}</S.DetailWrapper>}\n                            {description2 && <S.DetailWrapper> {description2}</S.DetailWrapper>}\n                        </S.SubWrapper>\n                    )}\n\n                    {(complexData || ableRoom) && (\n                        <>\n                            {ableRoom && (\n                                <S.InfoListWrapper>\n                                    거래가능한 방<S.InfoDataWrapper>{ableRoom} 개</S.InfoDataWrapper>\n                                </S.InfoListWrapper>\n                            )}\n                            {complexData && (\n                                <S.InfoListWrapper>\n                                    단지 정보\n                                    <S.InfoDataWrapper>\n                                        <Img src={TabIcon} alt=\"탭 아이콘\" height=\"18px\" />\n                                    </S.InfoDataWrapper>\n                                </S.InfoListWrapper>\n                            )}\n                        </>\n                    )}\n\n                    {CardType === 'type05' && (\n                        <S.SeeWrapper>\n                            <S.SeeText hasLink>{noneTitle}</S.SeeText>\n                            <svg width=\"35\" height=\"35\" viewBox=\"0 0 35 35\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <circle cx=\"17.5\" cy=\"17.5\" r=\"17.5\" fill=\"#3185F8\"></circle>\n                                    <g fill=\"#FFF\">\n                                        <path d=\"M10 17h15v1H10z\"></path>\n                                        <path d=\"M17 10h1v15h-1z\"></path>\n                                    </g>\n                                </g>\n                            </svg>\n                        </S.SeeWrapper>\n                    )}\n                </S.LinkWrapper>\n            ) : (\n                <>\n                    {CardType === 'type05' && (\n                        <S.SeeWrapper>\n                            <S.SeeText>{noneTitle}</S.SeeText>\n                        </S.SeeWrapper>\n                    )}\n                </>\n            )}\n        </S.CardWrapper>\n    );\n}\n","import styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n    boxWidth?: string;\n    cardImgHeight?: string; // 이미지 크기\n    FlagValid?: boolean;\n    styleroom?: boolean;\n    hasLink?: boolean;\n    CardType?: string;\n    borderColor?: string;\n}\n\nexport const CardWrapper = styled.li<Props>`\n    position: relative;\n    width: ${(props) => props.boxWidth && props.boxWidth};\n    text-align: left;\n\n    ${(props) =>\n        props.CardType === 'type05' &&\n        css`\n            vertical-align: top;\n        `}\n`;\n\nexport const SubWrapper = styled.div<Props>`\n    ${(props) =>\n        props.CardType === 'type02' &&\n        css`\n            padding: 0 0 30px;\n        `}\n    \n    ${(props) =>\n        props.CardType === 'type03' &&\n        css`\n            padding: 0 0 15px;\n        `}\n\n    ${(props) =>\n        props.CardType === 'type04' &&\n        css`\n            padding: 10px 14px;\n            border: 1px solid #eeeeee;\n        `}\n`;\n\nexport const LinkWrapper = styled(Link)``;\n\nexport const ImgWrapper = styled.div<Props>`\n    width: 100%;\n    height: ${(props) => props.cardImgHeight};\n    border-radius: 10px 10px 0 0;\n    font-size: 0;\n\n    ${(props) =>\n        props.CardType === 'type01' &&\n        css`\n            border-radius: 0;\n        `}\n\n    ${(props) =>\n        (props.CardType === 'type02' || props.CardType === 'type03') &&\n        css`\n            margin: 0 0 10px;\n        `}\n`;\n\nexport const FlagWrapper = styled.div``;\n\nexport const Flag = styled.div<Props>`\n    display: inline-block;\n    margin: 0 5px 0 0;\n    padding: 0 5px;\n    border: 1px solid #326cf9;\n    border-radius: 3px;\n    font-size: 11px;\n    color: #326cf9;\n\n    ${(props) =>\n        props.FlagValid &&\n        css`\n            border-color: #cdaf84;\n            color: #fff;\n            background: #cdaf84;\n        `}\n`;\n\nexport const RoomInfoWrapper = styled.div<Props>`\n    display: inline-block;\n    font-size: 14px;\n    color: #787878;\n\n    ${(props) =>\n        props.styleroom &&\n        css`\n            color: #000000;\n        `}\n`;\n\nexport const DetailWrapper = styled.div<Props>`\n    overflow: hidden;\n    width: 100%;\n    font-size: 14px;\n    color: #666666;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    ${(props) =>\n        props.CardType === 'type04' &&\n        css`\n            font-size: 15px;\n            color: #444444;\n        `}\n`;\n\nexport const AndWrapper = styled.span`\n    display: inline-block;\n    padding: 0 5px;\n`;\n\nexport const TitleWrapper = styled.div<Props>`\n    ${(props) =>\n        props.CardType === 'type01' &&\n        css`\n            position: absolute;\n            left: 20px;\n            bottom: 28px;\n            font-size: 26px;\n            color: #ffffff;\n        `}\n\n    ${(props) =>\n        (props.CardType === 'type02' || props.CardType === 'type03') &&\n        css`\n            margin: 0 0 6px;\n            font-size: 18px;\n        `}\n\n    ${(props) =>\n        (props.CardType === 'type01' || props.CardType === 'type02') &&\n        css`\n            font-weight: bold;\n        `}\n`;\n\nexport const InfoListWrapper = styled.div`\n    position: relative;\n    padding: 5px 0;\n    border-bottom: 1px solid #d8d8d8;\n\n    &:first-of-type {\n        border-top: 1px solid #d8d8d8;\n    }\n`;\n\nexport const InfoDataWrapper = styled.div`\n    position: absolute;\n    top: 5px;\n    right: 0;\n    line-height: 1.1;\n`;\n\nexport const AddressWrapper = styled.div`\n    font-size: 14px;\n    color: #dedede;\n`;\n\nexport const SeeWrapper = styled.div`\n    /* width: 280px; */\n    height: 186px;\n    border: 1px dotted #d6d8db;\n    background: #fbfbfc;\n    text-align: center;\n`;\n\nexport const SeeText = styled.p<Props>`\n    font-weight: 300;\n    font-size: 14px;\n    line-height: 186px;\n    color: #9498a0;\n\n    ${(props) =>\n        props.hasLink &&\n        css`\n            margin: 0 0 10px;\n            padding: 67px 0 0;\n            line-height: 1.1;\n            color: #3185f8;\n            background: #ffffff;\n        `}\n`;\n"],"names":[],"sourceRoot":""}