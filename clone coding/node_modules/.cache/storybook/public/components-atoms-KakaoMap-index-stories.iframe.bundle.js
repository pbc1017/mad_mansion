"use strict";
(globalThis["webpackChunkmad_mansion"] = globalThis["webpackChunkmad_mansion"] || []).push([["components-atoms-KakaoMap-index-stories"],{

/***/ "./src/components/atoms/KakaoMap/index.stories.tsx":
/*!*********************************************************!*\
  !*** ./src/components/atoms/KakaoMap/index.stories.tsx ***!
  \*********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   general: () => (/* binding */ general)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./src/components/atoms/KakaoMap/index.tsx");
/* harmony import */ var utils_MapData_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! utils/MapData.json */ "./src/utils/MapData.json");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/parkbyeongchan/Documents/KAIST/2023/SUMMER/\u1106\u1169\u11AF\u110B\u1175\u11B8\u110F\u1162\u11B7\u1111\u1173/3\u110C\u116E\u110E\u1161/clone coding/src/components/atoms/KakaoMap/index.stories.tsx",
  _general$parameters,
  _general$parameters2,
  _general$parameters2$;
// index.stories.tsx



 // 추가

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Atoms/KakaoMap',
  component: _index__WEBPACK_IMPORTED_MODULE_1__.KakaoMap
});
const general = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_index__WEBPACK_IMPORTED_MODULE_1__.KakaoMap, {
  ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 12,
  columnNumber: 49
}, undefined);
general.args = {
  address: '카카오 본사',
  positions: utils_MapData_json__WEBPACK_IMPORTED_MODULE_2__.positions // 변경
};

general.parameters = {
  ...general.parameters,
  docs: {
    ...((_general$parameters = general.parameters) === null || _general$parameters === void 0 ? void 0 : _general$parameters.docs),
    source: {
      originalSource: "(args: KakaoMapProps) => <KakaoMap {...args} />",
      ...((_general$parameters2 = general.parameters) === null || _general$parameters2 === void 0 ? void 0 : (_general$parameters2$ = _general$parameters2.docs) === null || _general$parameters2$ === void 0 ? void 0 : _general$parameters2$.source)
    }
  }
};
const __namedExportsOrder = ["general"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    general.displayName = "general";
    // @ts-ignore
    general.__docgenInfo = { "description": "", "displayName": "general", "props": { "address": { "defaultValue": null, "description": "", "name": "address", "required": false, "type": { "name": "string" } }, "positions": { "defaultValue": null, "description": "", "name": "positions", "required": false, "type": { "name": "PositionProps[]" } }, "height": { "defaultValue": null, "description": "", "name": "height", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/atoms/KakaoMap/index.stories.tsx#general"] = { docgenInfo: general.__docgenInfo, name: "general", path: "src/components/atoms/KakaoMap/index.stories.tsx#general" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/atoms/KakaoMap/index.tsx":
/*!*************************************************!*\
  !*** ./src/components/atoms/KakaoMap/index.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KakaoMap: () => (/* binding */ KakaoMap)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./style */ "./src/components/atoms/KakaoMap/style.ts");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/parkbyeongchan/Documents/KAIST/2023/SUMMER/\u1106\u1169\u11AF\u110B\u1175\u11B8\u110F\u1162\u11B7\u1111\u1173/3\u110C\u116E\u110E\u1161/clone coding/src/components/atoms/KakaoMap/index.tsx",
  _s = __webpack_require__.$Refresh$.signature();
// index.ts




// for using kakao map sdk
// 위치 데이터 type 정의

function KakaoMap({
  address,
  positions,
  height = '100%'
}) {
  _s();
  const kakaoMapRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const kakaoMapElement = kakaoMapRef.current;
    const options = {
      center: new kakao.maps.LatLng(37.566826, 126.9786567),
      level: 3
    };
    const kakaoMap = new kakao.maps.Map(kakaoMapElement, options);
    const ps = new kakao.maps.services.Places();
    function placesSearchCB(data, status, pagination) {
      if (status === kakao.maps.services.Status.OK) {
        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
        // LatLngBounds 객체에 좌표를 추가합니다
        var bounds = new kakao.maps.LatLngBounds();
        for (var i = 0; i < data.length; i++) {
          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));
        }

        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
        kakaoMap.setBounds(bounds);
      }
    }
    ps.keywordSearch(address, placesSearchCB);
    if (positions) {
      // 마커 클러스터러를 생성합니다
      var clusterer = new kakao.maps.MarkerClusterer({
        map: kakaoMap,
        // 마커들을 클러스터로 관리하고 표시할 지도 객체
        averageCenter: true,
        // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
        minLevel: 8 // 클러스터 할 최소 지도 레벨
      });

      // 데이터를 가져와 마커를 생성하고 클러스터러 객체에 넘겨줍니다
      var markers = positions.map(function (position, i) {
        return new kakao.maps.Marker({
          position: new kakao.maps.LatLng(position.latitude, position.longitude)
        });
      });

      // 클러스터러에 마커들을 추가합니다
      clusterer.addMarkers(markers);
    }
  }, [address, positions]);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_style__WEBPACK_IMPORTED_MODULE_1__.Container, {
    ref: kakaoMapRef,
    height: height
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 70,
    columnNumber: 12
  }, this);
}
_s(KakaoMap, "Cx3e6m6Ijg2QBtdfC46JbQSTEYE=");
_c = KakaoMap;
var _c;
__webpack_require__.$Refresh$.register(_c, "KakaoMap");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    KakaoMap.displayName = "KakaoMap";
    // @ts-ignore
    KakaoMap.__docgenInfo = { "description": "", "displayName": "KakaoMap", "props": { "address": { "defaultValue": null, "description": "", "name": "address", "required": false, "type": { "name": "string" } }, "positions": { "defaultValue": null, "description": "", "name": "positions", "required": false, "type": { "name": "PositionProps[]" } }, "height": { "defaultValue": { value: "100%" }, "description": "", "name": "height", "required": false, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/atoms/KakaoMap/index.tsx#KakaoMap"] = { docgenInfo: KakaoMap.__docgenInfo, name: "KakaoMap", path: "src/components/atoms/KakaoMap/index.tsx#KakaoMap" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/components/atoms/KakaoMap/style.ts":
/*!************************************************!*\
  !*** ./src/components/atoms/KakaoMap/style.ts ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Container: () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

// style.ts


const Container = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div`
    width: 100%;
    height: ${props => '28rem'};
    border-radius: 0.3rem;
`;

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/utils/MapData.json":
/*!********************************!*\
  !*** ./src/utils/MapData.json ***!
  \********************************/
/***/ ((module) => {

module.exports = JSON.parse('{"positions":[{"title":"카카오","latitude":33.450705,"longitude":126.570677},{"title":"생태연못","latitude":33.450936,"longitude":126.569477},{"title":"텃밭","latitude":33.450879,"longitude":126.56994},{"title":"근린공원","latitude":33.451393,"longitude":126.570738}]}');

/***/ })

}]);
//# sourceMappingURL=components-atoms-KakaoMap-index-stories.iframe.bundle.js.map